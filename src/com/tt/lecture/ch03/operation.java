package com.tt.lecture.ch03;

public class operation {

	public static void main(String[] args) {
//		연산자 : + , - , * 
//		피연산자 : 데이터
		
//		연산의 방향 : 
//			<-- : 증감, 부호, 비트, 논리, 대입
//			--> : 산술, 쉬프트, 비교, 논리 조건
			
//		연산의 우선순위
//			증감(++, --), 부호(+,-), 비트(~), 논리(!)
//			산술(*,/,%)
//			산술(+,-)
//			쉬프트(<<,>>,>>>)
//			비교(<,>,<=,>=,instanceof)
//			비교(==,!=)
//			논리(&)
//			논리(^)
//			논리(|)
//			논리(&&)
//			논리(||)
//			조건(?)
//			대입(=,+=,-+,*=,/+,%=,&=,^=,|=,<<=,>>=,>>>=)
//			* () 로 적절히 우선 순위를 잡아주는 것이 중요
		
//		단항 연산자
//			부호연산자 (+,-)
//			
//			증감연산자 (++,--)
		
//			논리 부정 연산자(!)
//			
//			비트 반전 연산자(~)
//			
//		이항 연산자
//			산술연산자 (+,-,*,/,%)
	//			int 보다 작은 타입들은 int 로 현변환 되어 연산
	//			연산 중에 큰 타입이 있으면 큰 타입으로 변환 되어 연산
//				오버플로우 : 연산 후 산출값이 산출 타입에서 충분히 표현이 가능한지 검토 후 값 대입
//			문자열연결연산자 (+)
		
//			비교연산자
//				동등비교 (==, !=)
//				크리비교 (<,>,<=,>=)
//				String 비교
				
//			논리연산자 (&&, ||, &, |, ^, !)
//				논리곱(&&,&) : 두조건이 모두 참일때만 참
//				논리합(||,|) : 둘중 한개만 참이라도 참
//				배타적논리합(^) : 한개는 참, 한개는 거짓일때 참
//				논리부정(!) : 논리값 변경
			
//			비트연산자
			
//			대입연산자
//				단순대입연산자(=)
//				복합대입연산자(+=,-=,*=,/=,%=,)
			
//		삼항연산자
		
		
//		
//		삼항 연산자

	}

}
